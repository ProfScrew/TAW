version: "3"

services:
    backend:
        container_name: backend
        build: webserver/backend/
        image: backend
        ports:
        - "8080:8080"
        volumes:
            - ./webserver/backend/express:/app/backend
        depends_on:
            - mongodb
            - redis
        networks:
            - Internal
            - External
        restart: unless-stopped

    frontend:
        container_name: frontend
        build: webserver/frontend/
        image: frontend
        ports:
        - "4200:4200"
        volumes:
        - ./webserver/frontend/angular/:/app/frontend
        depends_on:
            - backend
        networks:
            - Internal
            - External
        restart: unless-stopped

    mongodb:
        container_name: mongodb
        image: mongo
        restart: always
        ports:
        - "27017:27017"
        volumes:
         - ./db/mongodb:/data/db
        networks:
            - Internal
            - External
    redis:
        container_name: redis
        image: redis:7.2.0-alpine
        restart: always
        ports:
        - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning
        volumes: 
        - ./db/redis:/data/
        networks:
            - Internal
            - External
            
    reverseproxy:
        build: reverseproxy/
        image: reverseproxy
        container_name: reverseproxy
        networks:
            - Internal
            - External
        ports:
            - "80:80"
            - "443:443"
        volumes:
        - ./reverseproxy/contents/certificates:/etc/nginx/ssl
        depends_on:
            - frontend
            - backend
        restart: unless-stopped          


networks:
    Internal:
        internal: true
    External:
